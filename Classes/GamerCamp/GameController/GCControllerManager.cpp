////////////////////////////////////////////////////////////////////////////////////////////////////////////
// (C) Gamer Camp / Alex Darby 2019
// Distributed under the MIT license - see readme.md
////////////////////////////////////////////////////////////////////////////////////////////////////////////
#if defined (WIN32)
#include "GCControllerManager.h"

#include "2d/CCNode.h"
#include "base/CCEventDispatcher.h"
#include "base/CCDirector.h"
#include "base/ccMacros.h"
#include "base/CCEventListenerController.h"
#include "platform/CCGLView.h"


using namespace cocos2d;


//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
GCControllerManager::GCControllerManager()
{
	Reset();

	m_pcControllerListener = EventListenerController::create();


}



//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
GCControllerManager::~GCControllerManager()
{}

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
void GCControllerManager::Reset()
{}


//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
void GCControllerManager::Update()
{}


//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
bool GCControllerManager::ControllerIsActive( i32 iControllerID )
{
	return false;
}

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
bool GCControllerManager::ControllerButtonIsPressed( i32 iControllerID, Controller::Key eKeyCode )
{
	return false;
}

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
bool GCControllerManager::ControllerButtonHasJustBeenPressed( i32 iControllerID, Controller::Key eKeyCode )
{
	return false;
}

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
bool GCControllerManager::ControllerButtonHasJustBeenReleased( i32 iControllerID, Controller::Key eKeyCode )
{
	return false;
}

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
f32 GCControllerManager::ControllerGetCurrentAxisValueRaw( i32 iControllerID, Controller::Key eAxisKeyCode )
{
	return 0.0f;
}

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
f32 GCControllerManager::ControllerGetCurrentAxisDeadzoned( i32 iControllerID, Controller::Key eAxisKeyCode, float fDeadzone )
{
	return 0.0f;
}

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
Vec2 GCControllerManager::ControllerGetCurrentStickValueRaw( i32 iControllerID, Controller::Key eAxisKeyCodeX, Controller::Key eAxisKeyCodeY )
{
	return Vec2::ZERO;
}

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
Vec2 GCControllerManager::ControllerGetCurrentStickValueDeadzoned( i32 iControllerID, Controller::Key eAxisKeyCodeX, Controller::Key eAxisKeyCodeY, float fDeadzone )
{
	return Vec2::ZERO;
}


#endif //#if defined (WIN32)
